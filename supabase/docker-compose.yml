version: '3.8'

services:
  db:
    container_name: supabase-db
    image: supabase/postgres:14.1.0.89
    restart: unless-stopped
    ports:
      - "54322:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - /mnt/data/supabase_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  kong:
    image: kong:2.8
    restart: unless-stopped
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    volumes:
      - ./volumes/kong.yml:/var/lib/kong/kong.yml
    ports:
      - "8000:8000"  # Proxy
      - "8001:8001"  # Admin

  studio:
    image: supabase/studio:latest
    container_name: supabase-studio
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      SUPABASE_URL: http://localhost:8000
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}

  rest:
    image: postgrest/postgrest:v10.1.1
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      PGRST_DB_URI: postgres://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
      PGRST_DB_SCHEMA: public
    depends_on:
      db:
        condition: service_healthy

  realtime:
    image: supabase/realtime:v2.28.34
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: postgres
      PORT: 4000
      JWT_SECRET: ${JWT_SECRET}
      REPLICATION_MODE: RLS
      SECURE_CHANNELS: "false"
      SLOT_NAME: supabase_realtime
    depends_on:
      db:
        condition: service_healthy

  meta:
    image: supabase/postgres-meta:v0.72.0
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      PG_META_DB_HOST: db
      PG_META_DB_PORT: 5432
      PG_META_DB_USER: postgres
      PG_META_DB_PASSWORD: ${POSTGRES_PASSWORD}
      PG_META_DB_NAME: postgres
    depends_on:
      db:
        condition: service_healthy
